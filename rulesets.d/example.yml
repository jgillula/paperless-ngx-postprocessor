Some Ruleset Name:
  match: "{{ correspondent == 'The Bank' and document_type == 'Transfer Confirmation' }}"
  metadata_regex: '(?:From (?P<source>.*?)\n)|(?:through (?P<created_month>\w*?) (?P<created_day>\d{1,2}), (?P<created_year>\d{2}))'
  metadata_postprocessing:
    created_year: "{{ created_year | expand_two_digit_year }}" # This uses the 'expand_year' filter, which will take a two-digit year like 57 and turn it into a four-digit year like 2057
    source: "{{ source | title }}" # This applies the Jinja2 'title' filter, capitalizing each word
    title: "{{created_year}}-{{created_month}}-{{created_day}} -- {{correspondent}} -- {{document_type}} (from {{ source }})"
---
# You can put multiple rules in the same file if you want
# Note that rules are applied in order, so any changes from this rule will overwrite changes from previous rules
Some Other Ruleset Name:
  # This will always match
  match: True
  metadata_postprocessing:
    title: "{{created_year}}-{{created_month}}-{{created_day}} -- {{correspondent}} -- {{document_type}}"
---
Parse creation date from filename:
  # Matches all documents with a title starting with a date in iso format followed by a space
  # title: "2020-01-31 important document"
  match: '{{ title | regex_match("\d{4}-\d\d-\d\d ") }}'
  metadata_postprocessing:
    title_old: "{{ title }}" # saved as temporary value
    title: '{{ title_old | regex_sub("^(?P<created_year>\d{4})-(?P<created_month>\d{2})-(?P<created_day>\d{2}) (?P<title>.*)$", "\g<title>") }}'
    created_year: '{{ title_old | regex_sub("^(?P<created_year>\d{4})-(?P<created_month>\d{2})-(?P<created_day>\d{2}) (?P<title>.*)$", "\g<created_year>") }}'
    created_month: '{{ title_old | regex_sub("^(?P<created_year>\d{4})-(?P<created_month>\d{2})-(?P<created_day>\d{2}) (?P<title>.*)$", "\g<created_month>") }}'
    created_day: '{{ title_old | regex_sub("^(?P<created_year>\d{4})-(?P<created_month>\d{2})-(?P<created_day>\d{2}) (?P<title>.*)$", "\g<created_day>") }}'
  validation_rule: "{{ num_documents(correspondent=correspondent, document_type=document_type, created_date_object=created_date_object) == 1 }}"
  # Matches always
  # Extracts a titel of the document using AI (For now only Ollama)
AI Ruleset:
  match: True
  prompts:
    ai_title: "{{Extract the title from the document}}"
  metadata_postprocessing:
    title: "{{ai_title}}"
---
# Addition for custom_fields
# this is just an example from the contributor hasechris - he wants to fill a custom_field based on a handwritten note on the scanned document.
#
# this filter gets the handwritten "received" date and adds/updates the custom_field with name "received" (you have to create the custom_fields first in paperless-ngx)
#
# IMPORTANT: everything has to be specified as text in yaml - I think the template renderer cant work with something else
# 2. IMPORTANT: The custom_field type "Document links" is not supported atm.
custom_field_received:
  match: True
  metadata_regex: '(received )(?P<received_day>\d{2})\.(?P<received_month>\d{2})\.(?P<received_year>\d{4})'
  metadata_postprocessing:
    custom_fields:
      received: "{{ received_year }}-{{ received_month }}-{{ received_day }}"
      test_with_spaces: "True"
